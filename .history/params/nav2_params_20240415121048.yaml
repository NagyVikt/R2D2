# amcl:
#   ros__parameters:
#     alpha1: 0.2
#     alpha2: 0.2
#     alpha3: 0.2
#     alpha4: 0.2
#     alpha5: 0.2
#     base_frame_id: "base_footprint"
#     beam_skip_distance: 0.5
#     beam_skip_error_threshold: 0.9
#     beam_skip_threshold: 0.3
#     do_beamskip: false
#     global_frame_id: "map"
#     lambda_short: 0.1
#     laser_likelihood_max_dist: 2.0
#     laser_max_range: 100.0
#     laser_min_range: -1.0
#     laser_model_type: "likelihood_field"
#     max_beams: 60
#     max_particles: 2000
#     min_particles: 500
#     odom_frame_id: "odom"
#     pf_err: 0.05
#     pf_z: 0.99
#     recovery_alpha_fast: 0.0
#     recovery_alpha_slow: 0.0
#     resample_interval: 1
#     robot_model_type: "nav2_amcl::DifferentialMotionModel"
#     save_pose_rate: 0.5
#     sigma_hit: 0.2
#     tf_broadcast: true
#     transform_tolerance: 1.0
#     update_min_a: 0.2
#     update_min_d: 0.25
#     z_hit: 0.5
#     z_max: 0.05
#     z_rand: 0.5
#     z_short: 0.05
#     scan_topic: scan
#     map_topic: map
#     set_initial_pose: false
#     always_reset_initial_pose: false
#     first_map_only: false
#     initial_pose:
#       x: 0.0
#       y: 0.0
#       z: 0.0
#       yaw: 0.0

bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: "odom"
    
    use_sim_time: False
    default_nav_to_pose_bt_xml: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_w_replanning_only_if_goal_is_updated.xml"
    default_nav_through_poses_bt_xml: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml"
    always_reload_bt_xml: false
    bt_loop_duration: 20
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator/NavigateThroughPosesNavigator"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_are_error_codes_active_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node 
    - nav2_would_a_planner_recovery_help_condition_bt_node
    - nav2_would_a_controller_recovery_help_condition_bt_node
    - nav2_would_a_smoother_recovery_help_condition_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node
    - nav2_is_battery_charging_condition_bt_node

    
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.

    # plugin_lib_names is used to add custom BT plugins to the executor (vector of strings).
    # Built-in plugins are added automatically
    # plugin_lib_names: []

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code



# controller_server:
#   ros__parameters:
#     use_sim_time: False


#     controller_frequency: 20.0 #8
#     min_x_velocity_threshold: 0.1
#     min_y_velocity_threshold: 0.0
#     min_theta_velocity_threshold: 0.15


#     goal_checker_plugins: ["general_goal_checker"]
#     progress_checker_plugins: ["progress_checker"]
#     controller_plugins: ["FollowPath"]
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.005
#       movement_time_allowance: 4.0
#     general_goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.35
#       yaw_goal_tolerance: 0.35
#       stateful: True
#     FollowPath:
#       plugin: "nav2_rotation_shim_controller::RotationShimController"
#       primary_controller: "dwb_core::DWBLocalPlanner"
#       angular_dist_threshold: 1.5
#       forward_sampling_distance: 0.3
#       rotate_to_heading_angular_vel: 3.5
#       max_angular_accel: 3.5
#       simulate_ahead_time: 0.5

#       min_vel_x: -0.4
#       min_vel_y: 0.0
#       max_vel_x: 0.4
#       max_vel_y: 0.0
#       max_vel_theta: 1.0
#       min_speed_xy:  0.0
#       max_speed_xy: 0.4
#       min_speed_theta: 0.0
#       acc_lim_x: 2.5
#       acc_lim_y: 0.0
#       acc_lim_theta: 3.5
#       decel_lim_x: -2.5
#       decel_lim_y: 0.0
#       decel_lim_theta: -3.5
#       vx_samples: 10
#       vy_samples: 0
#       vtheta_samples: 15
#       sim_time: 1.2
    
#       linear_granularity: 0.05
#       angular_granularity: 0.02 #0.025
#       transform_tolerance: 0.6
#       trans_stopped_velocity: 0.25
    
#       short_circuit_trajectory_evaluation: True
#       # stateful: True
#       critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist" ]
#       # #Ez növeli az előre haladás preferálását az oldalirányú mozgással szemben. Deafult: 1.0
#       # PreferForward.penalty: 2.0
#       # #Kisebb oldalirányú mozgás engedélyezése. Deafult: 0.1
#       # PreferForward.strafe_x: 0.2
#       # #Engedélyezi a robotnak, hogy enyhén forduljon, miközben előre halad. Default: 0.2
#       # PreferForward.strafe_theta: 0.4
#       # #Erősebb hangsúlyt fektet a megfelelő irányba való fordulásra.
#       # PreferForward.theta_scale: 10.0
#       # #Növeli az előre haladás preferálásának fontosságát. Default: 1.0
#      # PreferForward.scale: 10.0
#       #Nagyobb hangsúly az akadályok elkerülésére, ami növeli a biztonságot. Default: 0.02 CHATGPT: 10.0
#       BaseObstacle.scale: 0.02
#       #Nagyobb hangsúly az útvonalhoz és a célhoz való igazodásra. Deafult 32.0 es 20.0
#       PathAlign.scale: 20.0
#       GoalAlign.scale: 15.0
#       #A robot előtt lévő pont távolságának növelése, amely segít a pontosabb igazodásban. Deafult: 0.1
#       PathAlign.forward_point_distance: 0.1
#       GoalAlign.forward_point_distance: 0.1
#       #Nagyobb súlyt ad az útvonalon való maradásnak és a célponthoz való közelítésnek.
#       PathDist.scale: 15.0
#       GoalDist.scale: 10.0

#       #Erős hangsúly a cél irányába történő forgásra.
#       RotateToGoal.scale: 40.0 #32.0
#       RotateToGoal.slowing_factor: 2.0 #10.0
#       RotateToGoal.lookahead_time: 1.0
     

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 8.0
    min_x_velocity_threshold: 0.05
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.09

    goal_checker_plugins: ["general_goal_checker"]
    progress_checker_plugins: ["progress_checker"]
    controller_plugins: ["FollowPath"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.005
      movement_time_allowance: 4.0
    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.35
      yaw_goal_tolerance: 0.35
      stateful: True
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "dwb_core::DWBLocalPlanner"
      #a szögkülönbség (radiánban), amelynél nagyobb eltérés esetén a robot először a kívánt irányba fordul, mielőtt elmozdulna.
      angular_dist_threshold: 0.5

      #A távolság, amit a vezérlő előre szimulál, hogy segítse a haladási irány beállítását.
      forward_sampling_distance: 2.0
      #Leírás: A maximális szögsebesség, amellyel a robot az előírt irányba fordul.
      #Érték: 1.5 radián/perc – Ez egy közepes sebességű forgatás, ami lehetővé teszi a robot számára, hogy gyorsan, de mégis kontrolláltan forduljon.
      rotate_to_heading_angular_vel: 1.5
      #Leírás: A robot maximális szöggyorsulása, amikor az előírt irányba fordul.
      max_angular_accel: 2.5
      #A szimuláció időtartama másodpercben, amíg a vezérlő előre kiszámítja a robot mozgását.
      simulate_ahead_time: 3.0

      min_vel_x: -0.3
      min_vel_y: 0.0
      max_vel_x: 0.3
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy:  0.0
      max_speed_xy: 0.4
      min_speed_theta: -1.0
      acc_lim_x: 2.0
      acc_lim_y: 0.0
      acc_lim_theta: 3.5
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.5
      vx_samples: 20
      vy_samples: 0
      vtheta_samples: 20
      sim_time: 1.7
    
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.5

      #Leírás: Az a sebességérték, amely alatt a robotot állónak tekintik.
      trans_stopped_velocity: 0.07

      #Ez speed uppol akkor ha van mar egy jo ut megtalalva nem nezi meg a tobbit
      short_circuit_trajectory_evaluation: false

      critics: ["RotateToGoal", "BaseObstacle", "PathDist", "GoalDist"]
      
      #Alapértelmezett érték: Nincs konkrét "ipari szabvány" alapértelmezett értékre, mivel ez nagyban függ a robot méretétől, kinematikájától, a felhasználás környezetétől, és a tervező preferenciáitól. Gyakori értékek 0.1-től 1.0-ig terjedhetnek.

      #BaseObstacle.scale: Ez a paraméter az akadályok elkerülésének fontosságát szabályozza. A trajektória-kiértékelő algoritmus az akadályok közelében lévő lehetséges útvonalak pontszámát csökkenti, ezzel elősegítve, hogy a robot biztonságos távolságot tartson. A scale értéke az akadályelkerülési kritérium súlyozását határozza meg a többi kritériumhoz képest.

      # Hogyan hat ez a robot működésére?

      #Magasabb érték: Nagyobb súlyt ad az akadályelkerülésnek. Ez azt jelenti, hogy a robot inkább választ olyan útvonalakat, amelyek messzebb kerülnek az akadályoktól, még akkor is, ha az adott útvonal hosszabb vagy kanyargósabb lehet.
      #Alacsonyabb érték: Kisebb prioritást ad az akadályelkerülésnek, lehetővé téve, hogy a robot közelebb menjen az akadályokhoz, vagy gyorsabb, egyenesebb útvonalat válasszon, ami azonban kockázatosabb lehet.
            
      BaseObstacle.scale: 0.5

      #Default Value: Can vary; often set between 10.0 to 50.0.
      PathDist.scale: 15.0
      #Default Value: Can vary; often set between 20.0 to 50.0.
      GoalDist.scale: 20.0
      #Default Value: Often similar to GoalDist.scale.
      RotateToGoal.scale: 20.0

      #Default Value: Typically around 2.0 to 5.0.
      #Range: Generally between 1.0 (no slowing) to higher values for more pronounced slowing.
      RotateToGoal.slowing_factor: 2.0

    
      #Default Value: Usually set between 1.0 to 5.0 seconds.
      RotateToGoal.lookahead_time: 5.0



local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: False

      transform_tolerance: 0.3
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      plugins: ["static_layer" , "obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.5 #0.7 a nav2ben
      obstacle_layer:
        transform_tolerance: 0.3
        initial_transform_timeout: 0.3 # Ensure this is added if it affects the layer's behavior
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 0.5
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 0.5
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 4.0
          raytrace_min_range: 0.0
          obstacle_max_range: 4.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.3
      always_send_full_costmap: True





global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: False
      transform_tolerance: 0.3

      footprint_padding: 0.03
      transform_tolerence: 0.3
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      robot_radius: 0.3 # radius set and used, so no footprint points
      resolution: 0.05
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        footprint_clearing_enabled: true
        max_obstacle_height: 2.0
        combination_method: 1
        scan:
          topic: /scan
          obstacle_max_range: 3.5
          obstacle_min_range: 0.0
          raytrace_max_range: 3.5
          raytrace_min_range: 0.0
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: false
          transform_tolerance: 0.3
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.3
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.55
        cost_scaling_factor: 5.0
        inflate_unknown: true
        inflate_around_unknown: true
      always_send_full_costmap: false





# The yaml_filename does not need to be specified since it going to be set by defaults in launch.
# If you'd rather set it in the yaml, remove the default "map" value in the tb3_simulation_launch.py
# file & provide full path to map below. If CLI map configuration or launch default is provided, that will be used.
# map_server:
#   ros__parameters:
#     yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: False

    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True


planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true


# smoother_server:

#   ros__parameters:
#     use_sim_time: False

#     smoother_plugins: ["SmoothPath"]

#     SmoothPath:
#       plugin: "nav2_constrained_smoother/ConstrainedSmoother"
#       reversing_enabled: false       # whether to detect forward/reverse direction and cusps. Should be set to false for paths without orientations assigned
#       path_downsampling_factor: 1   # every n-th node of the path is taken. Useful for speed-up
#       path_upsampling_factor: 1     # 0 - path remains downsampled, 1 - path is upsampled back to original granularity using cubic bezier, 2... - more upsampling
#       keep_start_orientation: true  # whether to prevent the start orientation from being smoothed
#       keep_goal_orientation: true   # whether to prevent the gpal orientation from being smoothed
#       minimum_turning_radius: 0.0  # minimum turning radius the robot can perform. Can be set to 0.0 (or w_curve can be set to 0.0 with the same effect) for diff-drive/holonomic robots
#       w_curve: 30.0                 # weight to enforce minimum_turning_radius
#       w_dist: 0.0                   # weight to bind path to original as optional replacement for cost weight
#       w_smooth: 2000000.0           # weight to maximize smoothness of path
#       w_cost: 0.015                 # weight to steer robot away from collision and cost

#       # Parameters used to improve obstacle avoidance near cusps (forward/reverse movement changes)
#       w_cost_cusp_multiplier: 3.0   # option to use higher weight during forward/reverse direction change which is often accompanied with dangerous rotations
#       cusp_zone_length: 2.5         # length of the section around cusp in which nodes use w_cost_cusp_multiplier (w_cost rises gradually inside the zone towards the cusp point, whose costmap weight eqals w_cost*w_cost_cusp_multiplier)

#       optimizer:
#         max_iterations: 100           # max iterations of smoother
#         debug_optimizer: true        # print debug info
#         gradient_tol: 5000.0
#         fn_tol: 1.0e-15
#         param_tol: 1.0e-20


smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True


behavior_server:
  ros__parameters:
    use_sim_time: False

    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["backup", "drive_on_heading", "wait"]
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"

    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.3
    simulate_ahead_time: 5.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.05
    rotational_acc_lim: 3.2
    enable_stamped_cmd_vel: false

waypoint_follower:
  ros__parameters:
    use_sim_time: False

    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint" # This should match the plugin's declared name in the plugin description file.
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint" # Ensure this matches the declared plugin type.
      enabled: True
      waypoint_pause_duration: 100


velocity_smoother:
  ros__parameters:
    use_sim_time: False

    smoothing_frequency: 20.0
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [0.3, 0.0, 1.0]
    min_velocity: [-0.3, 0.0, -1.0] 
    max_accel: [2.5, 0.0, 3.5]
    max_decel: [-2.5, 0.0, -3.5]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.001, 0.0, 0.001]
    velocity_timeout: 0.1

# collision_monitor:
#   ros__parameters:
#     use_sim_time: False

#     base_frame_id: "base_footprint"
#     odom_frame_id: "odom"
#     cmd_vel_in_topic: "cmd_vel_smoothed"
#     cmd_vel_out_topic: "cmd_vel"
#     state_topic: "collision_monitor_state"
#     transform_tolerance: 0.5
#     source_timeout: 5.0
#     base_shift_correction: True
#     stop_pub_timeout: 2.0
#     enable_stamped_cmd_vel: False
#     use_realtime_priority: false
#     polygons: ["PolygonStop", "PolygonSlow", "FootprintApproach"]
#     PolygonStop:
#       type: "circle"
#       radius: 0.3
#       action_type: "stop"
#       min_points: 4  # max_points: 3 for Humble
#       visualize: True
#       polygon_pub_topic: "polygon_stop"
#       enabled: True
#     PolygonSlow:
#       type: "polygon"
#       points: "[[1.0, 1.0], [1.0, -1.0], [-0.5, -1.0], [-0.5, 1.0]]"
#       action_type: "slowdown"
#       min_points: 4  # max_points: 3 for Humble
#       slowdown_ratio: 0.3
#       visualize: True
#       polygon_pub_topic: "polygon_slowdown"
#       enabled: True
#     PolygonLimit:
#       type: "polygon"
#       points: "[[0.5, 0.5], [0.5, -0.5], [-0.5, -0.5], [-0.5, 0.5]]"
#       action_type: "limit"
#       min_points: 4  # max_points: 3 for Humble
#       linear_limit: 0.4
#       angular_limit: 0.5
#       visualize: True
#       polygon_pub_topic: "polygon_limit"
#       enabled: True
#     FootprintApproach:
#       type: "polygon"
#       action_type: "approach"
#       footprint_topic: "/local_costmap/published_footprint"
#       time_before_collision: 2.0
#       simulation_time_step: 0.02
#       min_points: 6  # max_points: 5 for Humble
#       visualize: False
#       enabled: True
#     VelocityPolygonStop:
#       type: "velocity_polygon"
#       action_type: "stop"
#       min_points: 6
#       visualize: True
#       enabled: True
#       polygon_pub_topic: "velocity_polygon_stop"
#       velocity_polygons: ["rotation", "translation_forward", "translation_backward", "stopped"]
#       holonomic: false
#       rotation:
#         points: "[[0.3, 0.3], [0.3, -0.3], [-0.3, -0.3], [-0.3, 0.3]]"
#         linear_min: 0.0
#         linear_max: 0.05
#         theta_min: -1.0
#         theta_max: 1.0
#       translation_forward:
#         points: "[[0.35, 0.3], [0.35, -0.3], [-0.2, -0.3], [-0.2, 0.3]]"
#         linear_min: 0.0
#         linear_max: 1.0
#         theta_min: -1.0
#         theta_max: 1.0
#       translation_backward:
#         points: "[[0.2, 0.3], [0.2, -0.3], [-0.35, -0.3], [-0.35, 0.3]]"
#         linear_min: -1.0
#         linear_max: 0.0
#         theta_min: -1.0
#         theta_max: 1.0
#       # This is the last polygon to be checked, it should cover the entire range of robot's velocities
#       # It is used as the stopped polygon when the robot is not moving and as a fallback if the velocity
#       # is not covered by any of the other sub-polygons
#       stopped:
#         points: "[[0.25, 0.25], [0.25, -0.25], [-0.25, -0.25], [-0.25, 0.25]]"
#         linear_min: -1.0
#         linear_max: 1.0
#         theta_min: -1.0
#         theta_max: 1.0
#     observation_sources: ["scan"]
#     scan:
#       source_timeout: 0.2
#       type: "scan"
#       topic: "/scan"
#       enabled: True



# collision_detector:
#   ros__parameters:
#     use_sim_time: False

#     base_frame_id: "base_footprint"
#     odom_frame_id: "odom"
#     transform_tolerance: 0.5
#     source_timeout: 5.0
#     base_shift_correction: True
#     polygons: ["PolygonFront"]
#     PolygonFront:
#       type: "polygon"
#       points: "[[0.3, 0.3], [0.3, -0.3], [0.0, -0.3], [0.0, 0.3]]"
#       action_type: "none"
#       min_points: 4
#       visualize: True
#       polygon_pub_topic: "polygon_front"
#     observation_sources: ["scan"]
#     scan:
#       source_timeout: 0.2
#       type: "scan"
#       topic: "scan"
#       enabled: True


collision_monitor:
  ros__parameters:
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    state_topic: "collision_monitor_state"
    transform_tolerance: 0.2
    source_timeout: 1.0
    base_shift_correction: True
    stop_pub_timeout: 2.0
    # Polygons represent zone around the robot for "stop", "slowdown" and "limit" action types,
    # and robot footprint for "approach" action type.
    polygons: ["FootprintApproach"]
    FootprintApproach:
      type: "polygon"
      action_type: "approach"
      footprint_topic: "/local_costmap/published_footprint"
      time_before_collision: 1.2
      simulation_time_step: 0.1
      min_points: 6
      visualize: False
      enabled: True
    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "scan"
      min_height: 0.15
      max_height: 2.0
      enabled: True
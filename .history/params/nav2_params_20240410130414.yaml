amcl:
  ros__parameters:
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl/DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 0.45
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom

    default_nav_to_pose_bt_xml: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml"
    default_nav_through_poses_bt_xml: "$(find-pkg-share nav2_bt_navigator)/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml"
    always_reload_bt_xml: false
    path_blackboard_id: path
    bt_loop_duration: 10
    default_server_timeout: 40
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator/NavigateThroughPosesNavigator"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_assisted_teleop_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_are_error_codes_active_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_goal_updated_controller_bt_node 
    - nav2_would_a_planner_recovery_help_condition_bt_node
    - nav2_would_a_controller_recovery_help_condition_bt_node
    - nav2_would_a_smoother_recovery_help_condition_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_assisted_teleop_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node
    - nav2_is_battery_charging_condition_bt_node

    
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.

    # plugin_lib_names is used to add custom BT plugins to the executor (vector of strings).
    # Built-in plugins are added automatically
    # plugin_lib_names: []

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code


# controller_server:
#   ros__parameters:
#     controller_frequency: 30.0
#     FollowPath:
#       plugin: "nav2_mppi_controller::MPPIController"
#       time_steps: 56
#       model_dt: 0.05
#       batch_size: 2000
#       vx_std: 0.4
#       vy_std: 0.0
#       wz_std: 0.2
#       vx_max: 0.4
#       vx_min: -0.4
#       vy_max: 0.0
#       wz_max: 1.9
#       iteration_count: 1
#       prune_distance: 1.7
#       transform_tolerance: 0.1
#       temperature: 0.3
#       gamma: 0.015
#       motion_model: "DiffDrive"
#       visualize: true
  
#       regenerate_noises: false
#       TrajectoryVisualizer:
#         trajectory_step: 5
#         time_step: 3
#       AckermannConstraints:
#         min_turning_r: 0.2
#       critics: ["ConstraintCritic", "GoalCritic", "ObstaclesCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
#       # ConstraintCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 4.0
      # GoalCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 5.0
      #   threshold_to_consider: 1.4
      # GoalAngleCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 3.0
      #   threshold_to_consider: 0.5
      # PreferForwardCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 5.0
      #   threshold_to_consider: 0.5
      # ObstaclesCritic:
      #   enabled: true
      #   cost_power: 1
      #   repulsion_weight: 1.5
      #   critical_weight: 20.0
      #   consider_footprint: false
      #   collision_cost: 10000.0
      #   collision_margin_distance: 0.1
      #   near_goal_distance: 0.5
      # #   inflation_radius: 0.55 # (only in Humble)
      # #   cost_scaling_factor: 10.0 # (only in Humble)
      # PathAlignCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 14.0
      #   max_path_occupancy_ratio: 0.05
      #   trajectory_point_step: 4
      #   threshold_to_consider: 0.5
      #   offset_from_furthest: 20
      #   use_path_orientations: false
      # PathFollowCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 5.0
      #   offset_from_furthest: 5
      #   threshold_to_consider: 1.4
      # PathAngleCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 2.0
      #   offset_from_furthest: 4
      #   threshold_to_consider: 0.5
      #   max_angle_to_furthest: 1.0
      #   mode: 0
      # # TwirlingCritic:
      # #   enabled: true
      # #   twirling_cost_power: 1
      # #   twirling_cost_weight: 10.0


controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 15.0
    min_x_velocity_threshold: 0.005
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.005
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.35
      yaw_goal_tolerance: 0.35
      stateful: True
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      angular_dist_threshold: 0.785
      forward_sampling_distance: 0.5
      rotate_to_heading_angular_vel: 1.8
      max_angular_accel: 3.2
      simulate_ahead_time: 3.0

      min_vel_x: -0.4
      min_vel_y: 0.0
      max_vel_x: 0.4
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy:  0.0
      max_speed_xy: 0.4
      min_speed_theta: 0.0
      acc_lim_x: 3.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.5
      decel_lim_x: -3.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.5
      vx_samples: 20
      vy_samples: 0
      vtheta_samples: 100
      sim_time: 2.7
      #linear_granularity és angular_granularity: Ezek a paraméterek meghatározzák, 
      #hogy milyen finoman bontja a tervező a lineáris (előre/hátra) és az anguláris (forgási) mozgásokat a tervezés során. 
      #A linear_granularity 0.05 méterenként, az angular_granularity pedig 0.025 radiánként van beállítva, ami segít finomítani a tervezett útvonalakat és manővereket.
      linear_granularity: 0.05
      angular_granularity: 0.025 #0.025
      transform_tolerance: 0.7
      xy_goal_tolerance: 0.4
      trans_stopped_velocity: 0.25
    
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist", "PreferForward"]
      #Ez növeli az előre haladás preferálását az oldalirányú mozgással szemben. Deafult: 1.0
      PreferForward.penalty: 2.0
      #Kisebb oldalirányú mozgás engedélyezése. Deafult: 0.1
      PreferForward.strafe_x: 0.2
      #Engedélyezi a robotnak, hogy enyhén forduljon, miközben előre halad. Default: 0.2
      PreferForward.strafe_theta: 0.4
      #Erősebb hangsúlyt fektet a megfelelő irányba való fordulásra.
      PreferForward.theta_scale: 10.0
      #Növeli az előre haladás preferálásának fontosságát. Default: 1.0
      PreferForward.scale: 10.0
      #Nagyobb hangsúly az akadályok elkerülésére, ami növeli a biztonságot. Default: 0.02 CHATGPT: 10.0
      BaseObstacle.scale: 20.0
      #Nagyobb hangsúly az útvonalhoz és a célhoz való igazodásra. Deafult 32.0 es 20.0
      PathAlign.scale: 50.0
      GoalAlign.scale: 40.0
      #A robot előtt lévő pont távolságának növelése, amely segít a pontosabb igazodásban. Deafult: 0.1
      PathAlign.forward_point_distance: 0.2
      GoalAlign.forward_point_distance: 0.2
      #Nagyobb súlyt ad az útvonalon való maradásnak és a célponthoz való közelítésnek.
      PathDist.scale: 50.0
      GoalDist.scale: 40.0

      #Erős hangsúly a cél irányába történő forgásra.
      RotateToGoal.scale: 40.0 #32.0
      #Lassabb lassítás a célhoz való közelítéskor, lehetővé téve a pontosabb beállásokat.
      RotateToGoal.slowing_factor: 15.0 #10.0

      #A "RotateToGoal.lookahead_time" -1.0 értéke a DWB (Dynamic Window Approach) helyi útvonaltervező paramétereiben azt jelenti, 
      #hogy a "RotateToGoal" kritikus komponens mennyi ideig tekint előre a cél irányába történő forgatás során. Ha ez az érték -1.0, valószínűleg azt jelenti, 
      #hogy a paraméter alapértelmezett viselkedést követ, vagy nem használ előretekintési időt a cél felé fordulás során. 
      #Az előretekintési idő a robotnak a cél irányába történő fordulásának finomítására szolgál, hogy optimalizálja a forduló mozgását és javítsa a navigációs hatékonyságot.
      RotateToGoal.lookahead_time: 1.0


# controller_server:
#   ros__parameters:
#     odom_topic: "odom"

#     controller_frequency: 10.0
#     min_x_velocity_threshold: 0.005
#     min_y_velocity_threshold: 0.0
#     min_theta_velocity_threshold: 0.05
#     failure_tolerance: 0.2
#     progress_checker_plugins: ["progress_checker"]
#     goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
#     controller_plugins: ["FollowPath"]
#     use_realtime_priority: true
#     # Specify the current progress checker plugin
#     current_progress_checker: "progress_checker"
#     # Specify the current goal checker plugin
#     current_goal_checker: "general_goal_checker"



#     # Progress checker parameters
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.1 #nekem 0.1
#       movement_time_allowance: 5.0
#     # Goal checker parameters
#     #precise_goal_checker:
#     #  plugin: "nav2_controller::SimpleGoalChecker"
#     #  xy_goal_tolerance: 0.25
#     #  yaw_goal_tolerance: 0.25
#     #  stateful: True
#     general_goal_checker:
#       stateful: True
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.4
#       yaw_goal_tolerance: 0.5
#     # DWB parameters
#     FollowPath:
#       plugin: "dwb_core::DWBLocalPlanner"
#       debug_trajectory_details: True
#       min_vel_x: -0.4
#       min_vel_y: 0.0
#       max_vel_x: 0.4
#       max_vel_y: 0.0
#       max_vel_theta: 1.0
#       min_speed_xy:  0.0
#       max_speed_xy: 0.4
#       min_speed_theta: 0.0
#       acc_lim_x: 3.5
#       acc_lim_y: 0.0
#       acc_lim_theta: 3.5
#       decel_lim_x: -3.5
#       decel_lim_y: 0.0
#       decel_lim_theta: -3.5
#       vx_samples: 20
#       vy_samples: 0
#       vtheta_samples: 100
#       sim_time: 2.7
#       #linear_granularity és angular_granularity: Ezek a paraméterek meghatározzák, 
#       #hogy milyen finoman bontja a tervező a lineáris (előre/hátra) és az anguláris (forgási) mozgásokat a tervezés során. 
#       #A linear_granularity 0.05 méterenként, az angular_granularity pedig 0.025 radiánként van beállítva, ami segít finomítani a tervezett útvonalakat és manővereket.
#       linear_granularity: 0.05
#       angular_granularity: 0.025 #0.025
#       transform_tolerance: 0.7
#       xy_goal_tolerance: 0.4
#       trans_stopped_velocity: 0.25
      
#       short_circuit_trajectory_evaluation: True
#       stateful: True
#       critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist", "PreferForward"]
#       #Ez növeli az előre haladás preferálását az oldalirányú mozgással szemben. Deafult: 1.0
#       PreferForward.penalty: 2.0
#       #Kisebb oldalirányú mozgás engedélyezése. Deafult: 0.1
#       PreferForward.strafe_x: 0.2
#       #Engedélyezi a robotnak, hogy enyhén forduljon, miközben előre halad. Default: 0.2
#       PreferForward.strafe_theta: 0.4
#       #Erősebb hangsúlyt fektet a megfelelő irányba való fordulásra.
#       PreferForward.theta_scale: 10.0
#       #Növeli az előre haladás preferálásának fontosságát. Default: 1.0
#       PreferForward.scale: 10.0
#       #Nagyobb hangsúly az akadályok elkerülésére, ami növeli a biztonságot. Default: 0.02 CHATGPT: 10.0
#       BaseObstacle.scale: 20.0
#       #Nagyobb hangsúly az útvonalhoz és a célhoz való igazodásra. Deafult 32.0 es 20.0
#       PathAlign.scale: 50.0
#       GoalAlign.scale: 40.0
#       #A robot előtt lévő pont távolságának növelése, amely segít a pontosabb igazodásban. Deafult: 0.1
#       PathAlign.forward_point_distance: 0.2
#       GoalAlign.forward_point_distance: 0.2
#       #Nagyobb súlyt ad az útvonalon való maradásnak és a célponthoz való közelítésnek.
#       PathDist.scale: 50.0
#       GoalDist.scale: 40.0

#       #Erős hangsúly a cél irányába történő forgásra.
#       RotateToGoal.scale: 40.0 #32.0
#       #Lassabb lassítás a célhoz való közelítéskor, lehetővé téve a pontosabb beállásokat.
#       RotateToGoal.slowing_factor: 15.0 #10.0

#       #A "RotateToGoal.lookahead_time" -1.0 értéke a DWB (Dynamic Window Approach) helyi útvonaltervező paramétereiben azt jelenti, 
#       #hogy a "RotateToGoal" kritikus komponens mennyi ideig tekint előre a cél irányába történő forgatás során. Ha ez az érték -1.0, valószínűleg azt jelenti, 
#       #hogy a paraméter alapértelmezett viselkedést követ, vagy nem használ előretekintési időt a cél felé fordulás során. 
#       #Az előretekintési idő a robotnak a cél irányába történő fordulásának finomítására szolgál, hogy optimalizálja a forduló mozgását és javítsa a navigációs hatékonyságot.
#       RotateToGoal.lookahead_time: 1.0




local_costmap:
  local_costmap:
    ros__parameters:
 
      update_frequency: 5.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      robot_radius: 0.3
      plugins: ["static_layer" , "obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 30.0
        inflation_radius: 0.5 #0.7 a nav2ben
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 0.5
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 0.5
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 4.0
          raytrace_min_range: 0.0
          obstacle_max_range: 4.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map

      robot_base_frame: base_link
      robot_radius: 0.3
      resolution: 0.05
      track_unknown_space: true
      transform_tolerance: 0.8  # Added transform tolerance
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 0.5
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 2.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.4
      always_send_full_costmap: False

# The yaml_filename does not need to be specified since it going to be set by defaults in launch.
# If you'd rather set it in the yaml, remove the default "map" value in the tb3_simulation_launch.py
# file & provide full path to map below. If CLI map configuration or launch default is provided, that will be used.
# map_server:
#   ros__parameters:
#     yaml_filename: ""

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

# planner_server:
#   ros__parameters:
#     expected_planner_frequency: 20.0
#     use_sim_time: True
#     planner_plugins: ["GridBased"]
#     GridBased:
#       plugin: "nav2_theta_star_planner/ThetaStarPlanner" # In Iron and older versions, "/" was used instead of "::"
#       how_many_corners: 15
#       w_euc_cost: 1.0
#       w_traversal_cost: 2.0
#       w_heuristic_cost: 1.0
planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]
    use_sim_time: False

    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D" # In Iron and older versions, "/" was used instead of "::"
      tolerance: 0.225                      # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: true             # whether or not to downsample the map
      downsampling_factor: 2                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true                   # allow traveling in unknown space
      max_iterations: -1                # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 10.0                # max ti in s for planner to plan, smooth
      cost_travel_multiplier: 4.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      smoother:
        max_iterations: 1000 
        w_smooth: 0.8
        w_data: 0.1
        tolerance: 1.0e-10

smoother_server:
  ros__parameters:
    use_sim_time: False
    smoother_plugins: ["SmoothPath"]

    SmoothPath:
      plugin: "nav2_constrained_smoother/ConstrainedSmoother"
      reversing_enabled: true       # whether to detect forward/reverse direction and cusps. Should be set to false for paths without orientations assigned
      path_downsampling_factor: 1   # every n-th node of the path is taken. Useful for speed-up
      path_upsampling_factor: 1     # 0 - path remains downsampled, 1 - path is upsampled back to original granularity using cubic bezier, 2... - more upsampling
      keep_start_orientation: true  # whether to prevent the start orientation from being smoothed
      keep_goal_orientation: true   # whether to prevent the gpal orientation from being smoothed
      minimum_turning_radius: 0.4  # minimum turning radius the robot can perform. Can be set to 0.0 (or w_curve can be set to 0.0 with the same effect) for diff-drive/holonomic robots
      w_curve: 30.0                 # weight to enforce minimum_turning_radius
      w_dist: 0.0                   # weight to bind path to original as optional replacement for cost weight
      w_smooth: 2000000.0           # weight to maximize smoothness of path
      w_cost: 0.015                 # weight to steer robot away from collision and cost

      # Parameters used to improve obstacle avoidance near cusps (forward/reverse movement changes)
      w_cost_cusp_multiplier: 3.0   # option to use higher weight during forward/reverse direction change which is often accompanied with dangerous rotations
      cusp_zone_length: 2.5         # length of the section around cusp in which nodes use w_cost_cusp_multiplier (w_cost rises gradually inside the zone towards the cusp point, whose costmap weight eqals w_cost*w_cost_cusp_multiplier)

      optimizer:
        max_iterations: 100           # max iterations of smoother
        debug_optimizer: false        # print debug info
        gradient_tol: 5000.0
        fn_tol: 1.0e-15
        param_tol: 1.0e-20

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait", "assisted_teleop"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"


    
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.5
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.7
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2
    enable_stamped_cmd_vel: false

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: true
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint" # This should match the plugin's declared name in the plugin description file.
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint" # Ensure this matches the declared plugin type.
      enabled: True
      waypoint_pause_duration: 100


velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [0.4, 0.0, 1.0]
    min_velocity: [-0.4, 0.0, -1.0] 
    max_accel: [3.5, 0.0, 3.5]
    max_decel: [-3.5, 0.0, -3.5]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.001, 0.0, 0.001]
    velocity_timeout: 0.1



collision_detector:
  ros__parameters:
    base_frame_id: "base_footprint"
    odom_frame_id: "odom"
    transform_tolerance: 0.5
    source_timeout: 3.0
    base_shift_correction: True
    polygons: ["PolygonFront"]
    PolygonFront:
      type: "polygon"
      points: "[[0.3, 0.3], [0.3, -0.3], [0.0, -0.3], [0.0, 0.3]]"
      action_type: "none"
      min_points: 4
      visualize: True
      polygon_pub_topic: "polygon_front"
    observation_sources: ["scan"]
    scan:
      source_timeout: 0.2
      type: "scan"
      topic: "scan"
      enabled: True
